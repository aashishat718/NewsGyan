/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package newsgyan;

import client.UserInfoUpdateClient;
import java.awt.Desktop;
import java.awt.event.ActionEvent;
import java.awt.event.MouseEvent;
import java.awt.event.WindowAdapter;
import java.io.BufferedReader;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.MalformedURLException;
import java.net.URI;
import java.net.URISyntaxException;
import java.net.URL;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.prefs.Preferences;
import javax.swing.DefaultListModel;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import model.NewsArticle;
import model.User;
import newsgyan_test.TestN;
import ui.Renderer;
import utility.NewsGyan;

/**
 *
 * @author Vibhu007
 */
public class Home extends javax.swing.JFrame {

    /**
     * Creates new form Home
     */
    
    DefaultListModel<NewsArticle> listModel;
    public ArrayList<NewsArticle> news;
    public ArrayList<String> articleAddress; // for downloaded articles
    private int categoryType; // 1 for politics,2 for sports ....
    
    public Home() {
        initComponents();
        NewsGyan.main(new String[]{"top-headlines?","country=in&"});
        this.news = NewsGyan.newsArticles;
        listModel = new DefaultListModel<>();

        this.news.forEach((n) -> {
            listModel.addElement(n);
        });
        this.newsList.setModel(listModel);
        
        try{
            this.newsList.setCellRenderer(new Renderer());
        } catch(Exception ex){
            System.out.println(ex.getMessage());
        }
        
        newsType.setText("Top headlines");
        categoryType = 0;
        
        clock();
        this.userName.setText("Hi,"+ User.getInstance().getUserName());
        
        customWindowClosing();
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        downloadsButton = new javax.swing.JButton();
        showProfileButton = new javax.swing.JButton();
        signOutButton = new javax.swing.JButton();
        blogButton = new javax.swing.JButton();
        vlogButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        userName = new javax.swing.JLabel();
        searchBar = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        searchButton = new javax.swing.JButton();
        dateTimeDisplay = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        topHeadlinesButton = new javax.swing.JButton();
        politicsButton = new javax.swing.JButton();
        sportsButton = new javax.swing.JButton();
        businessButton = new javax.swing.JButton();
        entertainmentButton = new javax.swing.JButton();
        healthButton = new javax.swing.JButton();
        scienceButton = new javax.swing.JButton();
        recommendedButton = new javax.swing.JButton();
        jPanel4 = new javax.swing.JPanel();
        newsType = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        newsList = new javax.swing.JList<>();
        jButton2 = new javax.swing.JButton();
        enabled = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setPreferredSize(new java.awt.Dimension(66, 256));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        downloadsButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/downloadButton.jpg"))); // NOI18N
        downloadsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downloadsButtonActionPerformed(evt);
            }
        });
        jPanel1.add(downloadsButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 200, 45, 40));

        showProfileButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/user.jpg"))); // NOI18N
        showProfileButton.setToolTipText("");
        showProfileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showProfileButtonActionPerformed(evt);
            }
        });
        jPanel1.add(showProfileButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 10, 45, 40));

        signOutButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/logout.jpg"))); // NOI18N
        signOutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                signOutButtonActionPerformed(evt);
            }
        });
        jPanel1.add(signOutButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(8, 710, 45, 40));

        blogButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/blog.jpg"))); // NOI18N
        blogButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                blogButtonActionPerformed(evt);
            }
        });
        jPanel1.add(blogButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 270, 50, 50));

        vlogButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/vlog.jpg"))); // NOI18N
        vlogButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                vlogButtonActionPerformed(evt);
            }
        });
        jPanel1.add(vlogButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 340, 50, 50));

        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        userName.setText("Hi user,");
        jPanel2.add(userName, new org.netbeans.lib.awtextra.AbsoluteConstraints(12, 22, 126, 33));

        searchBar.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        searchBar.setText("Search");
        searchBar.setDisabledTextColor(new java.awt.Color(102, 102, 102));
        searchBar.setEnabled(false);
        searchBar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchBarMouseClicked(evt);
            }
        });
        jPanel2.add(searchBar, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 15, 254, 40));

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/searchBarIcon.jpg"))); // NOI18N
        jPanel2.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 0, 406, 68));

        searchButton.setOpaque(false);
        searchButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                searchButtonMouseClicked(evt);
            }
        });
        jPanel2.add(searchButton, new org.netbeans.lib.awtextra.AbsoluteConstraints(545, 15, 70, 40));

        dateTimeDisplay.setFont(new java.awt.Font("Yu Gothic UI Semilight", 3, 14)); // NOI18N
        dateTimeDisplay.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        dateTimeDisplay.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        jPanel2.add(dateTimeDisplay, new org.netbeans.lib.awtextra.AbsoluteConstraints(1040, 10, 200, 25));

        topHeadlinesButton.setText("Top headlines");
        topHeadlinesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                topHeadlinesButtonActionPerformed(evt);
            }
        });

        politicsButton.setText("Politics");
        politicsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                politicsButtonActionPerformed(evt);
            }
        });

        sportsButton.setText("Sports");
        sportsButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sportsButtonActionPerformed(evt);
            }
        });

        businessButton.setText("Business");
        businessButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                businessButtonActionPerformed(evt);
            }
        });

        entertainmentButton.setText("Entertainment");
        entertainmentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                entertainmentButtonActionPerformed(evt);
            }
        });

        healthButton.setText("Health");
        healthButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                healthButtonActionPerformed(evt);
            }
        });

        scienceButton.setText("Science");
        scienceButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                scienceButtonActionPerformed(evt);
            }
        });

        recommendedButton.setText("Recommended");
        recommendedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                recommendedButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(topHeadlinesButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(politicsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(sportsButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(businessButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(entertainmentButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(healthButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(scienceButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(recommendedButton, javax.swing.GroupLayout.PREFERRED_SIZE, 110, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(topHeadlinesButton)
                    .addComponent(politicsButton)
                    .addComponent(sportsButton)
                    .addComponent(businessButton)
                    .addComponent(entertainmentButton)
                    .addComponent(healthButton)
                    .addComponent(scienceButton)
                    .addComponent(recommendedButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        newsType.setText("News Type");

        newsList.setModel(new javax.swing.AbstractListModel<NewsArticle>() {
            NewsArticle[] news = {};
            public int getSize() { return news.length; }
            public NewsArticle getElementAt(int i) { return news[i]; }
        });
        newsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                newsListMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(newsList);

        jButton2.setText("Widget");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        enabled.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        enabled.setText("Disabled");

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(newsType, javax.swing.GroupLayout.PREFERRED_SIZE, 282, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(enabled, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(35, 35, 35))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(newsType, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2)
                    .addComponent(enabled, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 588, Short.MAX_VALUE)
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, 1264, Short.MAX_VALUE)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, 783, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void topHeadlinesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_topHeadlinesButtonActionPerformed
        NewsGyan.main(new String[]{"top-headlines?","country=in&"});
        this.news = NewsGyan.newsArticles;
        this.listModel.clear();
        this.news.forEach((n) -> {
            listModel.addElement(n);
        });
        this.newsList.setModel(listModel);
        newsType.setText("Top headlines");
        categoryType = 0;
    }//GEN-LAST:event_topHeadlinesButtonActionPerformed

    private void politicsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_politicsButtonActionPerformed
        NewsGyan.main(new String[]{"everything?","q=politics&"});
        this.news = NewsGyan.newsArticles;
        this.listModel.clear();
        this.news.forEach((n) -> {
            listModel.addElement(n);
        });
        this.newsList.setModel(listModel);
        newsType.setText("Politics");
        categoryType = 1;
    }//GEN-LAST:event_politicsButtonActionPerformed

    private void sportsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sportsButtonActionPerformed
        NewsGyan.main(new String[]{"everything?","q=sports&"});
        this.news = NewsGyan.newsArticles;
        this.listModel.clear();
        this.news.forEach((n) -> {
            listModel.addElement(n);
        });
        this.newsList.setModel(listModel);
        newsType.setText("Sports");
        categoryType = 2;
    }//GEN-LAST:event_sportsButtonActionPerformed

    private void businessButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_businessButtonActionPerformed
        NewsGyan.main(new String[]{"everything?","q=business&"});
        this.news = NewsGyan.newsArticles;
        this.listModel.clear();
        this.news.forEach((n) -> {
            listModel.addElement(n);
        });
        this.newsList.setModel(listModel);
        newsType.setText("Business");
        categoryType = 3;
    }//GEN-LAST:event_businessButtonActionPerformed

    private void entertainmentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_entertainmentButtonActionPerformed
        NewsGyan.main(new String[]{"everything?","q=entertainment&"});
        this.news = NewsGyan.newsArticles;
        this.listModel.clear();
        this.news.forEach((n) -> {
            listModel.addElement(n);
        });
        this.newsList.setModel(listModel);
        newsType.setText("Entertainment");
        categoryType = 4;
    }//GEN-LAST:event_entertainmentButtonActionPerformed

    private void healthButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_healthButtonActionPerformed
        NewsGyan.main(new String[]{"everything?","q=health&"});
        this.news = NewsGyan.newsArticles;
        this.listModel.clear();
        this.news.forEach((n) -> {
            listModel.addElement(n);
        });
        this.newsList.setModel(listModel);
        newsType.setText("Health");
        categoryType = 5;
    }//GEN-LAST:event_healthButtonActionPerformed

    private void scienceButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_scienceButtonActionPerformed
        NewsGyan.main(new String[]{"everything?","q=science&"});
        this.news = NewsGyan.newsArticles;
        this.listModel.clear();
        this.news.forEach((n) -> {
            listModel.addElement(n);
        });
        this.newsList.setModel(listModel);
        newsType.setText("Science");
        categoryType = 6;
    }//GEN-LAST:event_scienceButtonActionPerformed

    private void searchBarMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchBarMouseClicked
        if(!searchBar.isEnabled())
        {
            searchBar.setEnabled(true);
            searchBar.setText(null);
        }
        searchBar.setText(null);
    }//GEN-LAST:event_searchBarMouseClicked

    private void searchButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_searchButtonMouseClicked
        
        String customItem1 = searchBar.getText();
        String customItem = customItem1.replaceAll(" ", "%20");
        if(!customItem1.isEmpty())
        {
            NewsGyan.main(new String[]{"everything?", "q="+customItem +"&"});
            this.news = NewsGyan.newsArticles;
            this.listModel.clear();
            this.news.forEach((n) -> {
                listModel.addElement(n);
            });
            this.newsList.setModel(listModel);
            newsType.setText("Search results for " + customItem1);
            categoryType = 0;
        }
    }//GEN-LAST:event_searchButtonMouseClicked

    private void newsListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_newsListMouseClicked
        
        // selecting even if right mouse button is clicked
            if ( evt.getButton() == MouseEvent.BUTTON3 )
            {
                int row = newsList.locationToIndex(evt.getPoint());
                newsList.setSelectedIndex(row);
            }
            
        // if click is not from downloads
        if(!((newsType.getText()).equals("Your Downloads")))
        {
            NewsArticle clickedNews = (NewsArticle) newsList.getSelectedValue();
            if(clickedNews.getUrl() != null)
            {
                // to view the news
                if(evt.getButton() == MouseEvent.BUTTON1)
                {
                    viewNewsOnBrowser(clickedNews);
                    updateUserData();
                }
                // for other actions
                
                if(evt.getButton() == MouseEvent.BUTTON3)
                {
                    JPopupMenu popup = new JPopupMenu();
                    JMenuItem download = new JMenuItem("Download");
                    
                    download.addActionListener((ActionEvent e) -> {
                        NewsArticle clickedNews1 = (NewsArticle) newsList.getSelectedValue();
                        downlaodNewsArticle(clickedNews1);
                    });

                    popup.add(download);
                    newsList.setComponentPopupMenu(popup);
                }
                    
            }
            else{
                JOptionPane.showMessageDialog(null, "Can't load this news");
            }
        }
        // if click is from downloads
        else
        {
            int row = newsList.getSelectedIndex();
            if(evt.getButton() == MouseEvent.BUTTON1)
                viewDownloadedArticleOnBrowser(row);
            
            if(evt.getButton() == MouseEvent.BUTTON3)
            {
                JPopupMenu popup = new JPopupMenu();
                JMenuItem delete = new JMenuItem("Delete");

                delete.addActionListener((ActionEvent e) -> {
                    int row1 = newsList.getSelectedIndex();
                    deleteDownloadedArticle(row1);
                });

                popup.add(delete);
                newsList.setComponentPopupMenu(popup);
            }
        }
        //newsList.setComponentPopupMenu(null);
    }//GEN-LAST:event_newsListMouseClicked

    private void recommendedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_recommendedButtonActionPerformed
        RecommendationFetch.main(new String[]{});
        this.news = RecommendationFetch.recommended;
        this.listModel.clear();
        this.news.forEach((n) -> {
            listModel.addElement(n);
        });
        this.newsList.setModel(listModel);
        newsType.setText("your recommendations");
        categoryType = 0;
    }//GEN-LAST:event_recommendedButtonActionPerformed

    private void downloadsButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downloadsButtonActionPerformed
        
        try {
            DownloadedArticleFetch.main(new String[] {});
            this.news = DownloadedArticleFetch.newsArticles;
            this.articleAddress = DownloadedArticleFetch.articleAddress;
            this.listModel.clear();
            this.news.forEach((n) -> {
                listModel.addElement(n);
            });
            this.newsList.setModel(listModel);
            newsType.setText("Your Downloads");
            categoryType = 0;
            
        } catch (IOException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_downloadsButtonActionPerformed

    private void showProfileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showProfileButtonActionPerformed
        Profile profile = new Profile();
        profile.setVisible(true);
        profile.pack();
        profile.setLocationRelativeTo(null);
    }//GEN-LAST:event_showProfileButtonActionPerformed

    private void signOutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_signOutButtonActionPerformed
        
        int result = JOptionPane.showConfirmDialog(null,"Sure? You want to signout?"," NewsGyan",
                        JOptionPane.YES_NO_OPTION,
                        JOptionPane.QUESTION_MESSAGE);
        
        if(result == JOptionPane.YES_OPTION)
        {
            updateLoginStatus();
            UserInfoUpdateClient obj = new UserInfoUpdateClient();
            if(obj.updateUserInfo())
            {
                JOptionPane.showMessageDialog(null , "Signed out Successfully");
                Primary primary = new Primary();
                primary.setVisible(true);
                primary.pack();
                primary.setLocationRelativeTo(null);
                
                this.dispose();
            }
            
        }
    }//GEN-LAST:event_signOutButtonActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        
        if(enabled.getText().equals("Disabled")){
            enabled.setText("Enabled");
            setDefaultCloseOperation(Home.DISPOSE_ON_CLOSE);
        }
        else{
            enabled.setText("Disabled");
            setDefaultCloseOperation(Home.EXIT_ON_CLOSE);
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void blogButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_blogButtonActionPerformed
        BlogView blogView = new BlogView();
        blogView.setVisible(true);
        blogView.pack();
        blogView.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_blogButtonActionPerformed

    private void vlogButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_vlogButtonActionPerformed
        VlogView vlogView = new VlogView();
        vlogView.setVisible(true);
        vlogView.pack();
        vlogView.setLocationRelativeTo(null);
        this.dispose();
    }//GEN-LAST:event_vlogButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Home.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> {
            new Home().setVisible(true);
            
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton blogButton;
    private javax.swing.JButton businessButton;
    private javax.swing.JLabel dateTimeDisplay;
    private javax.swing.JButton downloadsButton;
    public javax.swing.JLabel enabled;
    private javax.swing.JButton entertainmentButton;
    private javax.swing.JButton healthButton;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JList<NewsArticle> newsList;
    private javax.swing.JLabel newsType;
    private javax.swing.JButton politicsButton;
    private javax.swing.JButton recommendedButton;
    private javax.swing.JButton scienceButton;
    private javax.swing.JTextField searchBar;
    private javax.swing.JButton searchButton;
    private javax.swing.JButton showProfileButton;
    private javax.swing.JButton signOutButton;
    private javax.swing.JButton sportsButton;
    private javax.swing.JButton topHeadlinesButton;
    private javax.swing.JLabel userName;
    private javax.swing.JButton vlogButton;
    // End of variables declaration//GEN-END:variables

    private void viewNewsOnBrowser(NewsArticle clickedNews) {
        if(Desktop.isDesktopSupported()){
            Desktop desktop = Desktop.getDesktop();
            try {
                desktop.browse(new URI(clickedNews.getUrl()));
            } catch (IOException | URISyntaxException e) {
                // TODO Auto-generated catch block
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, e);
            }
        }else{
            Runtime runtime = Runtime.getRuntime();
            try {
                runtime.exec("xdg-open " + clickedNews.getUrl());
            } catch (IOException e) {
                // TODO Auto-generated catch block
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, e);
            }
        }
    }

    private void updateUserData() {
        User user = User.getInstance();
        switch (categoryType) {
            case 1:
                user.setPoliticsF(user.getPoliticsF()+1);
                break;
            case 2:
                user.setSportsF(user.getSportsF()+1);
                break;
            case 3:
                user.setBusinessF(user.getBusinessF()+1);
                break;
            case 4:
                user.setEntertainmentF(user.getEntertainmentF()+1);
                break;
            case 5:
                user.setHealthF(user.getHealthF()+1);
                break;
            case 6:
                user.setScienceF(user.getScienceF()+1);
                break;
            default:
                break;
        }
    }

    private void downlaodNewsArticle(NewsArticle clickedNews) {
        String jsonString = new com.google.gson.Gson().toJson(clickedNews);
                //System.out.println(jsonString);
        try {
            URL url = new URL(clickedNews.getUrl());

            String timeStamp = String.valueOf(new java.sql.Timestamp(System.currentTimeMillis()).getTime());
            String fileName = "D:\\C\\NewsGyanData\\downloads\\"+timeStamp+".html";

            File file = new File(fileName);
            file.createNewFile();
            BufferedReader reader =  new BufferedReader(new InputStreamReader(url.openStream()));         
            BufferedWriter writer = new BufferedWriter(new FileWriter(file));       

            String line;
            while ((line = reader.readLine()) != null) {
               writer.write(line);
            }            

            File downloadInfo = new File("D:\\C\\NewsGyanData\\downloadInfo.txt");
            downloadInfo.createNewFile();
            
            try (BufferedWriter out = new BufferedWriter(new FileWriter(downloadInfo, true))) {
                out.write(jsonString+"\n");
                out.write(fileName+"\n");
            }
            
            JOptionPane.showMessageDialog(null, "Download Successful!");

            //System.out.println("Page downloaded.");

           } catch (MalformedURLException ex) {
               Logger.getLogger(TestN.class.getName()).log(Level.SEVERE, null, ex);
               JOptionPane.showMessageDialog(null, "Could not download article");
           } catch (IOException ex) {
               Logger.getLogger(TestN.class.getName()).log(Level.SEVERE, null, ex);
               JOptionPane.showMessageDialog(null, "Could not download article");
        }
        
    }

    private void viewDownloadedArticleOnBrowser(int row) {
        
        File file = new File(articleAddress.get(row));
        if(Desktop.isDesktopSupported()){
            Desktop desktop = Desktop.getDesktop();
            try {
                desktop.browse(file.toURI());
            } catch (IOException e) {
                // TODO Auto-generated catch block
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, e);
            }
        }else{
            Runtime runtime = Runtime.getRuntime();
            try {
                runtime.exec("xdg-open " + file.getAbsolutePath());
            } catch (IOException e) {
                // TODO Auto-generated catch block
                Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, e);
            }
        }
    }

    private void deleteDownloadedArticle(int row) {
        
        try {
            
            // first delete from downloadInfo 
            File temp = new File("D:\\C\\NewsGyanData\\temp.txt");
            temp.createNewFile();
            File downloadInfo = new File("D:\\C\\NewsGyanData\\downloadInfo.txt");
            
            BufferedWriter tempWriter = new BufferedWriter(new FileWriter(temp,true)); 
            BufferedReader br = new BufferedReader(new FileReader(downloadInfo));
                
            int c=1;
            String st;
            while((st=br.readLine()) != null)
            {
                if(row == c/2)
                {
                    st=br.readLine();
                    c+=2;
                    continue;
                }

                tempWriter.write(st+"\n");
                st=br.readLine();
                tempWriter.write(st+"\n");
                c+=2;
            }
                
            tempWriter.close();
            br.close();
            
            downloadInfo.delete();
            while(true){
                if(temp.renameTo(downloadInfo)){
                    
                    System.out.println("Renamed");break;}
                else
                    System.out.println("Not Renamed");}

            
            // delete from physical storage
            File articleFile = new File(articleAddress.get(row));
            articleFile.delete();
            
            // now delete from application
            this.news.remove(row);
            this.articleAddress.remove(row);
            this.listModel.remove(row);
            this.newsList.setModel(listModel);
            
            JOptionPane.showMessageDialog(null, "Article deleted successfully");
            
        } catch (IOException ex) {
            Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
            JOptionPane.showMessageDialog(null, "Could not delete article");
        } 
    }
    
    private void clock()
    {
        Thread c = new Thread()
        {
            @Override
            public void run()
            {
                while(true){
                    Calendar now = Calendar.getInstance();
                    DateFormat dateFormat = new SimpleDateFormat("yyyy/MM/dd HH:mm:ss");
                    dateTimeDisplay.setText(dateFormat.format(now.getTime()));
                    try {
                        sleep(1000);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(Home.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }
            }
        };
        
        c.start();
    }
    
    private void updateLoginStatus() {
        Preferences pref = Preferences.userNodeForPackage(Primary.class);
        pref.putInt("status", 0); // 0 for logged out , 1 for logged in
        pref.remove("user");
    }
    
    private void customWindowClosing() {
        this.addWindowListener(new WindowAdapter(){
            @Override
        public void windowClosing(java.awt.event.WindowEvent windowEvent) {
            
            UserInfoUpdateClient obj1 = new UserInfoUpdateClient();
                if(!(obj1.updateUserInfo()))
                    JOptionPane.showMessageDialog(null , "Some error occured");
                
            if(enabled.getText().equals("Enabled"))
            {
                DesktopWidget obj = new DesktopWidget();
                obj.setVisible(true);
                obj.pack();
                obj.setLocation(1600, 10);
            }
            
            //System.exit(0);
            }
        });
    }
     
}
