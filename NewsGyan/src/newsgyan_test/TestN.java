/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package newsgyan_test;

import newsgyan.DesktopWidget;
import ui.Renderer;
import com.google.gson.Gson;
import java.awt.Desktop;
import java.awt.event.ActionEvent;
import java.awt.event.MouseEvent;
import java.io.BufferedReader;
import java.io.File;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.JPopupMenu;
import model.NewsArticle;
import newsgyan.Home;
import utility.NewsGyan;
import org.json.JSONArray;
import org.json.JSONObject;

/**
 *
 * @author Vibhu007
 */
public class TestN extends javax.swing.JFrame {

    /**
     * Creates new form TestN
     */
    
    static ArrayList<NewsArticle> newsArticles = new ArrayList();
    private static HttpURLConnection connection;
    
   // jList1 = new JList<>();
    
    public TestN() {
        initComponents();
        //showNewsWithImages();
        DefaultListModel<NewsArticle> listModel = new DefaultListModel<>();
        TestN.newsArticles.forEach((n) -> {
            listModel.addElement(n);
        });
        
        this.jList1.setModel(listModel);
        
        try{
            this.jList1.setCellRenderer(new Renderer());
        } catch(Exception ex){
            System.out.println(ex.getMessage());
        }
        

        pref.setSelectedIndex(2);
    }

    private void showNewsWithImages() {
        
        Thread n = new Thread()
        {
            @Override
            public void run()
            {
                DefaultListModel<NewsArticle> listModel = new DefaultListModel<>();
                
                TestN.newsArticles.forEach((n) -> {
                    listModel.addElement(n);
                    jList1.setModel(listModel);

                    try{
                        jList1.setCellRenderer(new Renderer());
                    } catch(Exception ex){
                        System.out.println(ex.getMessage());
                        }
                });
 
            }
        };
        
        n.start();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jList1 = new javax.swing.JList<>();
        pref = new javax.swing.JComboBox<>();
        jButton2 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jList1.setModel(new javax.swing.AbstractListModel<NewsArticle>() {
            NewsArticle[] news = {};
            public int getSize() { return news.length; }
            public NewsArticle getElementAt(int i) { return news[i]; }
        });
        jList1.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jList1.setToolTipText("");
        jList1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jList1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jList1);

        pref.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));

        jButton2.setText("jButton2");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(243, 243, 243)
                        .addComponent(jButton2)
                        .addGap(230, 230, 230)
                        .addComponent(pref, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 1086, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(35, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 611, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(82, 82, 82)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(pref, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2))
                .addContainerGap(39, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jList1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jList1MouseClicked
//        JOptionPane.showMessageDialog(null, jList1.getSelectedIndex());
        if(evt.getButton() == MouseEvent.BUTTON1)
        {
            NewsArticle clickedNews = (NewsArticle) jList1.getSelectedValue();
//            try {
//                URL url = new URL(clickedNews.getUrl());
//
//                BufferedReader reader =  new BufferedReader(new InputStreamReader(url.openStream()));         
//             BufferedWriter writer = new BufferedWriter(new FileWriter("D:\\testnews\\page123w.html"));       
//
//             String line;
//             while ((line = reader.readLine()) != null) {
//                writer.write(line);
//             }            
//             System.out.println("Page downloaded.");
//
//            } catch (MalformedURLException ex) {
//                Logger.getLogger(TestN.class.getName()).log(Level.SEVERE, null, ex);
//            } catch (IOException ex) {
//                Logger.getLogger(TestN.class.getName()).log(Level.SEVERE, null, ex);
//            }
        }
        if(evt.getButton() == MouseEvent.BUTTON3)
        {
            JPopupMenu popup = new JPopupMenu();
            JMenuItem download = new JMenuItem("Download");
            
            download.addActionListener((ActionEvent e) -> {
                JOptionPane.showMessageDialog(null, jList1.getSelectedIndex());
            });

            popup.add(download);
            jList1.setComponentPopupMenu(popup);
            
        }
        
    }//GEN-LAST:event_jList1MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        DesktopWidget obj = new DesktopWidget();
        obj.setVisible(true);
        obj.pack();
        obj.setLocationRelativeTo(null);
        
        this.dispose();
    }//GEN-LAST:event_jButton2ActionPerformed

    /**
     * @param args the command line arguments
     */
    
    
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TestN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TestN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TestN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TestN.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                BufferedReader reader;
                String line;
                StringBuilder responseContent = new StringBuilder();
                
                try {
                    URL url = new URL("https://newsapi.org/v2/top-headlines?country=us&apiKey=e7514601899d4fa9bafd0c35499b387c");
                    connection = (HttpURLConnection) url.openConnection();
                    
                    //request setup
                    
                    connection.setRequestMethod("GET");
                    connection.setConnectTimeout(5000);
                    connection.setReadTimeout(5000);
                    
                    int status = connection.getResponseCode();
                    //System.out.println(status);

                    if(status!=200){
                        reader = new BufferedReader(new InputStreamReader(connection.getErrorStream()));
                        while( (line = reader.readLine())!= null){
                            responseContent.append(line);
                        }
                        reader.close();
                    }
                    else{
                        reader = new BufferedReader(new InputStreamReader(connection.getInputStream()));
                        while( (line = reader.readLine())!= null){
                            responseContent.append(line);
                        }
                        reader.close();
                    }

                    //System.out.println(responseContent.toString());
                    String newsResponse = responseContent.toString();
                    newsResponse = newsResponse.substring(responseContent.indexOf("["));
                    parse(newsResponse);
                    
                } catch (MalformedURLException ex) {
                    Logger.getLogger(NewsGyan.class.getName()).log(Level.SEVERE, null, ex);
                } catch (IOException ex) {
                    Logger.getLogger(NewsGyan.class.getName()).log(Level.SEVERE, null, ex);
                }finally{
                    connection.disconnect();
                }
                
                
                TestN obj = new TestN();
                obj.setVisible(true);
                obj.showNewsWithImages();
            }
        });
    }

    public static String parse(String responseContent){
        JSONArray articleList = new JSONArray(responseContent);
        for(int i=0;i<articleList.length();i++){
            JSONObject article = articleList.getJSONObject(i);
            //String author = article.getString("author");
            try
            {
                Gson gson = new Gson();
                NewsArticle obj = gson.fromJson(article.toString(), NewsArticle.class);
                newsArticles.add(obj);
                
            } catch (NullPointerException ex){
                Logger.getLogger(NewsGyan.class.getName()).log(Level.SEVERE, null, ex);
            } finally{
            
            }
        }
        return null;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JList<NewsArticle> jList1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> pref;
    // End of variables declaration//GEN-END:variables

}